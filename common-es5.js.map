{"version":3,"sources":["./src/app/services/brands.service.ts","./src/app/services/companies.service.ts","./src/app/services/models.service.ts"],"names":[],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { link } from '../variables/services.config';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from './local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrandsService {\r\n\r\n  constructor(\r\n    private cHttp: HttpClient,\r\n    private cUser: LocalStorageService\r\n  ) { }\r\n\r\n  public save( name: string ): Observable<any> {\r\n    return this.cHttp.post( `${ link }/glass-brands/`, {name, user: this.cUser.getIndex('id'), token: this.cUser.getToken()} );\r\n  }\r\n\r\n  public fetch( skip: number, limit: number, filter?: number, value?: string ): Observable<any> {\r\n    value = value ? value : '';\r\n    return this.cHttp.get( `${ link }/glass-brands/${skip}/${limit}/${filter}/${ value }` );\r\n  }\r\n\r\n  public edit( id: string, name: string ): Observable<any> {\r\n    return this.cHttp.put( `${ link }/glass-brands/${ id }`, { name, user: this.cUser.getIndex('id')  } );\r\n  }\r\n\r\n  public swapStatus( id: string, status: string ): Observable<any> {\r\n    return this.cHttp.delete( `${ link }/glass-brands/${id}/${status}` );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { link } from '../variables/services.config';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompaniesService {\n\n  public route = 'company';\n  constructor(\n    private cHttp: HttpClient\n  ) { }\n\n  public save( data: any ): Observable<any> {\n    return this.cHttp.post( `${ link }/${ this.route }`, data );\n  }\n\n  public edit( id: string, data: any ): Observable<any> {\n    return this.cHttp.put( `${ link }/${ this.route }/${ id }`, data );\n  }\n\n  public fetch( skip: number, limit: number, value?: string ): Observable<any> {\n    value = value ? value : '';\n    return this.cHttp.get( `${ link }/${ this.route }/${skip}/${limit}/${ value }` );\n  }\n\n  public catalog(): Observable<any> {\n    return this.cHttp.get( `${ link }/company-catalog` );\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { link } from '../variables/services.config';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from './local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModelsService {\r\n  public route = 'glass-models';\r\n  constructor(\r\n    private cHttp: HttpClient,\r\n    private cUser: LocalStorageService\r\n  ) { }\r\n\r\n  public save( name: string, brand: string ): Observable<any> {\r\n    return this.cHttp.post( `${ link }/${ this.route }/`, {name, brand, user: this.cUser.getIndex('id'), token: this.cUser.getToken()} );\r\n  }\r\n\r\n  public fetch( skip: number, limit: number, value?: string ): Observable<any> {\r\n    value = value ? value : '';\r\n    return this.cHttp.get( `${ link }/${ this.route }/${skip}/${limit}/${ value }` );\r\n  }\r\n\r\n  public edit( id: string, name: string, brand: string ): Observable<any> {\r\n    return this.cHttp.put( `${ link }/${ this.route }/${ id }`, { name, brand, user: this.cUser.getIndex('id')  } );\r\n  }\r\n\r\n  public swapStatus( id: string, status: string ): Observable<any> {\r\n    return this.cHttp.delete( `${ link }/${ this.route }/${id}/${status}` );\r\n  }\r\n\r\n  public findByBrand( id: string ): Observable<any> {\r\n    return this.cHttp.get( `${ link }/glass-brand-model/${id}` );\r\n  }\r\n}\r\n"],"sourceRoot":""}